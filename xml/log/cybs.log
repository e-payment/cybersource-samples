2016-12-28 00:59:47.498 main FILESTART> CYBERSOURCE LOG FILE

2016-12-28 00:59:47.499 main TRANSTART> =======================================
2016-12-28 00:59:47.500 main MERCHCFG > merchantID=kr950210047, keysDirectory=./key, keyAlias=kr950210047, keyPassword=kr950210047, sendToProduction=false, sendToAkamai=true, targetAPIVersion=1.129, keyFilename=(null), serverURL=(null), namespaceURI=(null), enableLog=true, logDirectory=log/, logFilename=(null), logMaximumSize=10, useHttpClient=false, timeout=1000, useSignAndEncrypted=false
2016-12-28 00:59:47.512 main REQUEST  > 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<requestMessage xmlns="urn:schemas-cybersource-com:transaction-data-1.129">
<merchantID>kr950210047</merchantID>
<!-- The sample code will replace _NSURI_ with the actual namespace URI. -->
<!-- We will let the XMLClient insert the merchantID.                    -->
	<merchantReferenceCode>your_merchant_reference_code</merchantReferenceCode>
<clientLibrary>Java XML</clientLibrary>
<clientLibraryVersion>6.2.2</clientLibraryVersion>
<clientEnvironment>Mac OS X/10.12.2/Oracle Corporation/1.8.0_112</clientEnvironment>
	<billTo>
		<firstName>xxxx</firstName>
		<lastName>xxx</lastName>
		<street1>1295xxxxxxxxxxxxRoad</street1>
		<city>Mountain View</city>
		<state>CA</state>
		<postalCode>94043</postalCode>
		<country>US</country>
		<phoneNumber>65xxxxxxxx00</phoneNumber>
		<email>noboxxxxxxxxxxxxxx.com</email>
		<ipAddress>10.7.7.7</ipAddress>
	</billTo>
	<shipTo>
		<firstName>xxxx</firstName>
		<lastName>xxx</lastName>
		<street1>10xxxxxxxxxxet</street1>
		<city>San Mateo</city>
		<state>CA</state>
		<postalCode>94401</postalCode>
		<country>US</country>
	</shipTo>
	<item id="0">
		<unitPrice>12.34</unitPrice>
	</item>
	<item id="1">
		<unitPrice>56.78</unitPrice>
	</item>
	<purchaseTotals>
		<currency>USD</currency>
	</purchaseTotals>
	<card>
		<accountNumber>4111xxxxxxxx1111</accountNumber>
		<expirationMonth>xx</expirationMonth>
		<expirationYear>xxxx</expirationYear>
	</card>
	<ccAuthService run="true">
	</ccAuthService>
</requestMessage>

2016-12-28 00:59:48.425 main EXCEPTION> Exception while loading KeyStore, 'null'
2016-12-28 00:59:48.426 main EXCEPTION> 
ClientException details:
innerException: 
java.io.IOException: exception decrypting data - java.security.InvalidKeyException: Illegal key size
	at org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.cryptData(Unknown Source)
	at org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineLoad(Unknown Source)
	at java.security.KeyStore.load(KeyStore.java:1445)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.readAndStoreCertificateAndPrivateKey(SignedAndEncryptedMessageHandler.java:99)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.loadMerchantP12File(SignedAndEncryptedMessageHandler.java:76)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.<init>(SignedAndEncryptedMessageHandler.java:53)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.getInstance(SignedAndEncryptedMessageHandler.java:61)
	at com.cybersource.ws.client.XMLClient.soapWrapAndSign(XMLClient.java:365)
	at com.cybersource.ws.client.XMLClient.runTransaction(XMLClient.java:178)
	at com.cybersource.ws.client.XMLClient.runTransaction(XMLClient.java:122)
	at com.cybersource.sample.AuthSample.main(AuthSample.java:64)
	at com.cybersource.sample.AuthSampleTest.shouldAuthen(AuthSampleTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)


2016-12-28 01:07:30.719 main TRANSTART> =======================================
2016-12-28 01:07:30.720 main MERCHCFG > merchantID=kr950210047, keysDirectory=./key, keyAlias=kr950210047, keyPassword=kr950210047, sendToProduction=false, sendToAkamai=true, targetAPIVersion=1.129, keyFilename=(null), serverURL=(null), namespaceURI=(null), enableLog=true, logDirectory=log/, logFilename=(null), logMaximumSize=10, useHttpClient=false, timeout=1000, useSignAndEncrypted=false
2016-12-28 01:07:30.726 main REQUEST  > 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<requestMessage xmlns="urn:schemas-cybersource-com:transaction-data-1.129">
<merchantID>kr950210047</merchantID>
<!-- The sample code will replace _NSURI_ with the actual namespace URI. -->
<!-- We will let the XMLClient insert the merchantID.                    -->
	<merchantReferenceCode>your_merchant_reference_code</merchantReferenceCode>
<clientLibrary>Java XML</clientLibrary>
<clientLibraryVersion>6.2.2</clientLibraryVersion>
<clientEnvironment>Mac OS X/10.12.2/Oracle Corporation/1.8.0_112</clientEnvironment>
	<billTo>
		<firstName>xxxx</firstName>
		<lastName>xxx</lastName>
		<street1>1295xxxxxxxxxxxxRoad</street1>
		<city>Mountain View</city>
		<state>CA</state>
		<postalCode>94043</postalCode>
		<country>US</country>
		<phoneNumber>65xxxxxxxx00</phoneNumber>
		<email>noboxxxxxxxxxxxxxx.com</email>
		<ipAddress>10.7.7.7</ipAddress>
	</billTo>
	<shipTo>
		<firstName>xxxx</firstName>
		<lastName>xxx</lastName>
		<street1>10xxxxxxxxxxet</street1>
		<city>San Mateo</city>
		<state>CA</state>
		<postalCode>94401</postalCode>
		<country>US</country>
	</shipTo>
	<item id="0">
		<unitPrice>12.34</unitPrice>
	</item>
	<item id="1">
		<unitPrice>56.78</unitPrice>
	</item>
	<purchaseTotals>
		<currency>USD</currency>
	</purchaseTotals>
	<card>
		<accountNumber>4111xxxxxxxx1111</accountNumber>
		<expirationMonth>xx</expirationMonth>
		<expirationYear>xxxx</expirationYear>
	</card>
	<ccAuthService run="true">
	</ccAuthService>
</requestMessage>

2016-12-28 01:07:31.589 main EXCEPTION> Exception while loading KeyStore, 'null'
2016-12-28 01:07:31.590 main EXCEPTION> 
ClientException details:
innerException: 
java.io.IOException: exception decrypting data - java.security.InvalidKeyException: Illegal key size
	at org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.cryptData(Unknown Source)
	at org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineLoad(Unknown Source)
	at java.security.KeyStore.load(KeyStore.java:1445)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.readAndStoreCertificateAndPrivateKey(SignedAndEncryptedMessageHandler.java:99)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.loadMerchantP12File(SignedAndEncryptedMessageHandler.java:76)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.<init>(SignedAndEncryptedMessageHandler.java:53)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.getInstance(SignedAndEncryptedMessageHandler.java:61)
	at com.cybersource.ws.client.XMLClient.soapWrapAndSign(XMLClient.java:365)
	at com.cybersource.ws.client.XMLClient.runTransaction(XMLClient.java:178)
	at com.cybersource.ws.client.XMLClient.runTransaction(XMLClient.java:122)
	at com.cybersource.sample.AuthSample.main(AuthSample.java:64)
	at com.cybersource.sample.AuthSampleTest.shouldAuthen(AuthSampleTest.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)


2016-12-28 01:08:19.023 main TRANSTART> =======================================
2016-12-28 01:08:19.024 main MERCHCFG > merchantID=kr950210047, keysDirectory=./key, keyAlias=kr950210047, keyPassword=kr950210047, sendToProduction=false, sendToAkamai=true, targetAPIVersion=1.129, keyFilename=(null), serverURL=(null), namespaceURI=(null), enableLog=true, logDirectory=log/, logFilename=(null), logMaximumSize=10, useHttpClient=false, timeout=1000, useSignAndEncrypted=false
2016-12-28 01:08:19.031 main REQUEST  > 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<requestMessage xmlns="urn:schemas-cybersource-com:transaction-data-1.129">
<merchantID>kr950210047</merchantID>
<!-- The sample code will replace _NSURI_ with the actual namespace URI. -->
<!-- We will let the XMLClient insert the merchantID.                    -->
	<merchantReferenceCode>your_merchant_reference_code</merchantReferenceCode>
<clientLibrary>Java XML</clientLibrary>
<clientLibraryVersion>6.2.2</clientLibraryVersion>
<clientEnvironment>Mac OS X/10.12.2/Oracle Corporation/1.8.0_112</clientEnvironment>
	<billTo>
		<firstName>xxxx</firstName>
		<lastName>xxx</lastName>
		<street1>1295xxxxxxxxxxxxRoad</street1>
		<city>Mountain View</city>
		<state>CA</state>
		<postalCode>94043</postalCode>
		<country>US</country>
		<phoneNumber>65xxxxxxxx00</phoneNumber>
		<email>noboxxxxxxxxxxxxxx.com</email>
		<ipAddress>10.7.7.7</ipAddress>
	</billTo>
	<shipTo>
		<firstName>xxxx</firstName>
		<lastName>xxx</lastName>
		<street1>10xxxxxxxxxxet</street1>
		<city>San Mateo</city>
		<state>CA</state>
		<postalCode>94401</postalCode>
		<country>US</country>
	</shipTo>
	<item id="0">
		<unitPrice>12.34</unitPrice>
	</item>
	<item id="1">
		<unitPrice>56.78</unitPrice>
	</item>
	<purchaseTotals>
		<currency>USD</currency>
	</purchaseTotals>
	<card>
		<accountNumber>4111xxxxxxxx1111</accountNumber>
		<expirationMonth>xx</expirationMonth>
		<expirationYear>xxxx</expirationYear>
	</card>
	<ccAuthService run="true">
	</ccAuthService>
</requestMessage>

2016-12-28 01:08:19.846 main EXCEPTION> Exception while loading KeyStore, 'null'
2016-12-28 01:08:19.847 main EXCEPTION> 
ClientException details:
innerException: 
java.io.IOException: exception decrypting data - java.security.InvalidKeyException: Illegal key size
	at org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.cryptData(Unknown Source)
	at org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineLoad(Unknown Source)
	at java.security.KeyStore.load(KeyStore.java:1445)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.readAndStoreCertificateAndPrivateKey(SignedAndEncryptedMessageHandler.java:99)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.loadMerchantP12File(SignedAndEncryptedMessageHandler.java:76)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.<init>(SignedAndEncryptedMessageHandler.java:53)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.getInstance(SignedAndEncryptedMessageHandler.java:61)
	at com.cybersource.ws.client.XMLClient.soapWrapAndSign(XMLClient.java:365)
	at com.cybersource.ws.client.XMLClient.runTransaction(XMLClient.java:178)
	at com.cybersource.ws.client.XMLClient.runTransaction(XMLClient.java:122)
	at com.cybersource.sample.AuthSample.main(AuthSample.java:64)
	at com.cybersource.sample.AuthSampleTest.shouldAuthen(AuthSampleTest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)


2016-12-28 01:09:50.588 main TRANSTART> =======================================
2016-12-28 01:09:50.589 main MERCHCFG > merchantID=kr950210047, keysDirectory=./key, keyAlias=kr950210047, keyPassword=kr950210047, sendToProduction=false, sendToAkamai=true, targetAPIVersion=1.129, keyFilename=(null), serverURL=(null), namespaceURI=(null), enableLog=true, logDirectory=log/, logFilename=(null), logMaximumSize=10, useHttpClient=false, timeout=1000, useSignAndEncrypted=false
2016-12-28 01:09:50.595 main REQUEST  > 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<requestMessage xmlns="urn:schemas-cybersource-com:transaction-data-1.129">
<merchantID>kr950210047</merchantID>
<!-- The sample code will replace _NSURI_ with the actual namespace URI. -->
<!-- We will let the XMLClient insert the merchantID.                    -->
	<merchantReferenceCode>your_merchant_reference_code</merchantReferenceCode>
<clientLibrary>Java XML</clientLibrary>
<clientLibraryVersion>6.2.2</clientLibraryVersion>
<clientEnvironment>Mac OS X/10.12.2/Oracle Corporation/1.8.0_112</clientEnvironment>
	<billTo>
		<firstName>xxxx</firstName>
		<lastName>xxx</lastName>
		<street1>1295xxxxxxxxxxxxRoad</street1>
		<city>Mountain View</city>
		<state>CA</state>
		<postalCode>94043</postalCode>
		<country>US</country>
		<phoneNumber>65xxxxxxxx00</phoneNumber>
		<email>noboxxxxxxxxxxxxxx.com</email>
		<ipAddress>10.7.7.7</ipAddress>
	</billTo>
	<shipTo>
		<firstName>xxxx</firstName>
		<lastName>xxx</lastName>
		<street1>10xxxxxxxxxxet</street1>
		<city>San Mateo</city>
		<state>CA</state>
		<postalCode>94401</postalCode>
		<country>US</country>
	</shipTo>
	<item id="0">
		<unitPrice>12.34</unitPrice>
	</item>
	<item id="1">
		<unitPrice>56.78</unitPrice>
	</item>
	<purchaseTotals>
		<currency>USD</currency>
	</purchaseTotals>
	<card>
		<accountNumber>4111xxxxxxxx1111</accountNumber>
		<expirationMonth>xx</expirationMonth>
		<expirationYear>xxxx</expirationYear>
	</card>
	<ccAuthService run="true">
	</ccAuthService>
</requestMessage>

2016-12-28 01:09:51.436 main EXCEPTION> Exception while loading KeyStore, 'null'
2016-12-28 01:09:51.437 main EXCEPTION> 
ClientException details:
innerException: 
java.io.IOException: exception decrypting data - java.security.InvalidKeyException: Illegal key size
	at org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.cryptData(Unknown Source)
	at org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineLoad(Unknown Source)
	at java.security.KeyStore.load(KeyStore.java:1445)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.readAndStoreCertificateAndPrivateKey(SignedAndEncryptedMessageHandler.java:99)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.loadMerchantP12File(SignedAndEncryptedMessageHandler.java:76)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.<init>(SignedAndEncryptedMessageHandler.java:53)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.getInstance(SignedAndEncryptedMessageHandler.java:61)
	at com.cybersource.ws.client.XMLClient.soapWrapAndSign(XMLClient.java:365)
	at com.cybersource.ws.client.XMLClient.runTransaction(XMLClient.java:178)
	at com.cybersource.ws.client.XMLClient.runTransaction(XMLClient.java:122)
	at com.cybersource.sample.AuthSample.main(AuthSample.java:64)
	at com.cybersource.sample.AuthSampleTest.shouldAuthen(AuthSampleTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)


2016-12-28 01:17:24.961 main TRANSTART> =======================================
2016-12-28 01:17:24.962 main MERCHCFG > merchantID=kr950210047, keysDirectory=key, keyAlias=kr950210047, keyPassword=kr950210047, sendToProduction=false, sendToAkamai=true, targetAPIVersion=1.129, keyFilename=(null), serverURL=(null), namespaceURI=(null), enableLog=true, logDirectory=log/, logFilename=(null), logMaximumSize=10, useHttpClient=false, timeout=1000, useSignAndEncrypted=false
2016-12-28 01:17:24.968 main REQUEST  > 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<requestMessage xmlns="urn:schemas-cybersource-com:transaction-data-1.129">
<merchantID>kr950210047</merchantID>
<!-- The sample code will replace _NSURI_ with the actual namespace URI. -->
<!-- We will let the XMLClient insert the merchantID.                    -->
	<merchantReferenceCode>your_merchant_reference_code</merchantReferenceCode>
<clientLibrary>Java XML</clientLibrary>
<clientLibraryVersion>6.2.2</clientLibraryVersion>
<clientEnvironment>Mac OS X/10.12.2/Oracle Corporation/1.8.0_112</clientEnvironment>
	<billTo>
		<firstName>xxxx</firstName>
		<lastName>xxx</lastName>
		<street1>1295xxxxxxxxxxxxRoad</street1>
		<city>Mountain View</city>
		<state>CA</state>
		<postalCode>94043</postalCode>
		<country>US</country>
		<phoneNumber>65xxxxxxxx00</phoneNumber>
		<email>noboxxxxxxxxxxxxxx.com</email>
		<ipAddress>10.7.7.7</ipAddress>
	</billTo>
	<shipTo>
		<firstName>xxxx</firstName>
		<lastName>xxx</lastName>
		<street1>10xxxxxxxxxxet</street1>
		<city>San Mateo</city>
		<state>CA</state>
		<postalCode>94401</postalCode>
		<country>US</country>
	</shipTo>
	<item id="0">
		<unitPrice>12.34</unitPrice>
	</item>
	<item id="1">
		<unitPrice>56.78</unitPrice>
	</item>
	<purchaseTotals>
		<currency>USD</currency>
	</purchaseTotals>
	<card>
		<accountNumber>4111xxxxxxxx1111</accountNumber>
		<expirationMonth>xx</expirationMonth>
		<expirationYear>xxxx</expirationYear>
	</card>
	<ccAuthService run="true">
	</ccAuthService>
</requestMessage>

2016-12-28 01:17:25.881 main EXCEPTION> Exception while loading KeyStore, 'null'
2016-12-28 01:17:25.882 main EXCEPTION> 
ClientException details:
innerException: 
java.io.IOException: exception decrypting data - java.security.InvalidKeyException: Illegal key size
	at org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.cryptData(Unknown Source)
	at org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi.engineLoad(Unknown Source)
	at java.security.KeyStore.load(KeyStore.java:1445)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.readAndStoreCertificateAndPrivateKey(SignedAndEncryptedMessageHandler.java:99)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.loadMerchantP12File(SignedAndEncryptedMessageHandler.java:76)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.<init>(SignedAndEncryptedMessageHandler.java:53)
	at com.cybersource.ws.client.SignedAndEncryptedMessageHandler.getInstance(SignedAndEncryptedMessageHandler.java:61)
	at com.cybersource.ws.client.XMLClient.soapWrapAndSign(XMLClient.java:365)
	at com.cybersource.ws.client.XMLClient.runTransaction(XMLClient.java:178)
	at com.cybersource.ws.client.XMLClient.runTransaction(XMLClient.java:122)
	at com.cybersource.sample.AuthSample.main(AuthSample.java:64)
	at com.cybersource.sample.AuthSampleTest.shouldAuthen(AuthSampleTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)


2016-12-28 01:30:03.592 main TRANSTART> =======================================
2016-12-28 01:30:03.594 main MERCHCFG > merchantID=kr950210047, keysDirectory=key, keyAlias=kr950210047, keyPassword=kr950210047, sendToProduction=false, sendToAkamai=true, targetAPIVersion=1.129, keyFilename=(null), serverURL=(null), namespaceURI=(null), enableLog=true, logDirectory=log/, logFilename=(null), logMaximumSize=10, useHttpClient=false, timeout=1000, useSignAndEncrypted=false
2016-12-28 01:30:03.600 main REQUEST  > 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<requestMessage xmlns="urn:schemas-cybersource-com:transaction-data-1.129">
<merchantID>kr950210047</merchantID>
<!-- The sample code will replace _NSURI_ with the actual namespace URI. -->
<!-- We will let the XMLClient insert the merchantID.                    -->
	<merchantReferenceCode>your_merchant_reference_code</merchantReferenceCode>
<clientLibrary>Java XML</clientLibrary>
<clientLibraryVersion>6.2.2</clientLibraryVersion>
<clientEnvironment>Mac OS X/10.12.2/Oracle Corporation/1.8.0_112</clientEnvironment>
	<billTo>
		<firstName>xxxx</firstName>
		<lastName>xxx</lastName>
		<street1>1295xxxxxxxxxxxxRoad</street1>
		<city>Mountain View</city>
		<state>CA</state>
		<postalCode>94043</postalCode>
		<country>US</country>
		<phoneNumber>65xxxxxxxx00</phoneNumber>
		<email>noboxxxxxxxxxxxxxx.com</email>
		<ipAddress>10.7.7.7</ipAddress>
	</billTo>
	<shipTo>
		<firstName>xxxx</firstName>
		<lastName>xxx</lastName>
		<street1>10xxxxxxxxxxet</street1>
		<city>San Mateo</city>
		<state>CA</state>
		<postalCode>94401</postalCode>
		<country>US</country>
	</shipTo>
	<item id="0">
		<unitPrice>12.34</unitPrice>
	</item>
	<item id="1">
		<unitPrice>56.78</unitPrice>
	</item>
	<purchaseTotals>
		<currency>USD</currency>
	</purchaseTotals>
	<card>
		<accountNumber>4111xxxxxxxx1111</accountNumber>
		<expirationMonth>xx</expirationMonth>
		<expirationYear>xxxx</expirationYear>
	</card>
	<ccAuthService run="true">
	</ccAuthService>
</requestMessage>

2016-12-28 01:30:04.379 main INFO     > Signing request...
2016-12-28 01:30:09.535 main INFO     > Using HttpURLConnection for connections.
2016-12-28 01:30:10.057 main INFO     > Sending 4732 bytes to https://ics2wstesta.ic3.com/commerce/1.x/transactionProcessor
2016-12-28 01:30:10.057 main INFO     > Reading response...
2016-12-28 01:30:12.353 main INFO     > Parsing response...
2016-12-28 01:30:12.361 main REPLY    > 
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<c:replyMessage xmlns:c="urn:schemas-cybersource-com:transaction-data-1.129">
<c:merchantReferenceCode>your_merchant_reference_code</c:merchantReferenceCode>
<c:requestID>4828634116226450001014</c:requestID>
<c:decision>ACCEPT</c:decision>
<c:reasonCode>100</c:reasonCode>
<c:requestToken>Ahj/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxGgq+</c:requestToken>
<c:purchaseTotals>
<c:currency>USD</c:currency>
</c:purchaseTotals>
<c:ccAuthReply>
<c:reasonCode>100</c:reasonCode>
<c:amount>69.12</c:amount>
<c:authorizationCode>xxxxxx</c:authorizationCode>
<c:avsCode>Y</c:avsCode>
<c:avsCodeRaw>Y</c:avsCodeRaw>
<c:authorizedDateTime>2016-12-27T18:30:12Z</c:authorizedDateTime>
<c:processorResponse>00</c:processorResponse>
<c:reconciliationID>4828634116226450001014</c:reconciliationID>
<c:merchantAdviceCode>xx</c:merchantAdviceCode>
<c:merchantAdviceCodeRaw>xxxx</c:merchantAdviceCodeRaw>
<c:cavvResponseCode>x</c:cavvResponseCode>
<c:cavvResponseCodeRaw>x</c:cavvResponseCodeRaw>
<c:paymentNetworkTransactionID>01xxxxxxxxxxx00</c:paymentNetworkTransactionID>
</c:ccAuthReply>
<c:receiptNumber>xxxxxx</c:receiptNumber>
<c:additionalData>xxx</c:additionalData>
</c:replyMessage>

